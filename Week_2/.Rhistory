sales$ship_date <- as.Date(sales$ship_date, format = '%B %d %Y')
sales$order_date <- as.Date(sales$order_date, format = '%m/%d/%Y')
#Find max and min order dates
newest_order = max(sales$order_date) #The most recent order date is 2017-12-30
oldest_order = min(sales$order_date) #The older order was placed on 2014-01-03
#Create interval between oldest and most recent order
date_intervals = interval(newest_order, oldest_order)
time_in_seconds = int_length(date_intervals) * -1
time_in_seconds
number_of_days = time_in_seconds / 60 / 60 / 24
#Set as date
sales$ship_date <- as.Date(sales$ship_date, format = '%B %d %Y')
sales$order_date <- as.Date(sales$order_date, format = '%m/%d/%Y')
#Find max and min order dates
newest_order = max(sales$order_date) #The most recent order date is 2017-12-30
oldest_order = min(sales$order_date) #The older order was placed on 2014-01-03
#Create interval between oldest and most recent order
date_intervals = interval(newest_order, oldest_order)
time_in_seconds = int_length(date_intervals) * -1
time_in_seconds
number_of_days = time_in_seconds / 60 / 60 / 24
number_of_days
#Set as date
sales$ship_date <- as.Date(sales$ship_date, format = '%B %d %Y')
sales$order_date <- as.Date(sales$order_date, format = '%m/%d/%Y')
#Find max and min order dates
newest_order = max(sales$order_date) #The most recent order date is 2017-12-30
oldest_order = min(sales$order_date) #The older order was placed on 2014-01-03
#Create interval between oldest and most recent order
date_intervals = interval(newest_order, oldest_order)
time_in_seconds = int_length(date_intervals) * -1
time_in_seconds
#Convert interval from seconds to days // 1457 days occured between the oldest and most recent order
number_of_days = time_in_seconds / 60 / 60 / 24
number_of_days
#
number_of_days / 365
#Set as date
sales$ship_date <- as.Date(sales$ship_date, format = '%B %d %Y')
sales$order_date <- as.Date(sales$order_date, format = '%m/%d/%Y')
#Find max and min order dates
newest_order = max(sales$order_date) #The most recent order date is 2017-12-30
oldest_order = min(sales$order_date) #The older order was placed on 2014-01-03
#Create interval between oldest and most recent order
date_intervals = interval(newest_order, oldest_order)
time_in_seconds = int_length(date_intervals) * -1
time_in_seconds
#Convert interval from seconds to days // 1457 days occured between the oldest and most recent order
number_of_days = time_in_seconds / 60 / 60 / 24
number_of_days
# ~ 4 years
number_of_days / 365
#
number_of_days / 52
#Set as date
sales$ship_date <- as.Date(sales$ship_date, format = '%B %d %Y')
sales$order_date <- as.Date(sales$order_date, format = '%m/%d/%Y')
#Find max and min order dates
newest_order = max(sales$order_date) #The most recent order date is 2017-12-30
oldest_order = min(sales$order_date) #The older order was placed on 2014-01-03
#Create interval between oldest and most recent order
date_intervals = interval(newest_order, oldest_order)
time_in_seconds = int_length(date_intervals) * -1
time_in_seconds
#Convert interval from seconds to days // 1457 days occured between the oldest and most recent order
number_of_days = time_in_seconds / 60 / 60 / 24
number_of_days
# ~ 4 years
number_of_days / 365
# ~28 weeks
number_of_days / 7
#Set as date
sales$ship_date <- as.Date(sales$ship_date, format = '%B %d %Y')
sales$order_date <- as.Date(sales$order_date, format = '%m/%d/%Y')
#Find max and min order dates
newest_order = max(sales$order_date) #The most recent order date is 2017-12-30
oldest_order = min(sales$order_date) #The older order was placed on 2014-01-03
#Create interval between oldest and most recent order
date_intervals = interval(newest_order, oldest_order)
time_in_seconds = int_length(date_intervals) * -1
time_in_seconds
#Convert interval from seconds to days // 1457 days occured between the oldest and most recent order
number_of_days = time_in_seconds / 60 / 60 / 24
number_of_days
# ~ 4 years
number_of_days / 365
# ~208 weeks
number_of_days / 7
?aggregate
?attach
sales$time_to_ship <- sales$ship_date - sales$order_date
sales$time_to_ship <- sales$ship_date - sales$order_date
View(sales)
#Calculate the time to ship for each order
sales$time_to_ship <- sales$ship_date - sales$order_date
#
mean(sales$time_to_ship)
sales$first_name <- str_split_fixed(string=sales$customer_name,pattern=' ', n=1)
sales$first_name <- str_split_fixed(string=sales$customer_name,pattern=' ')
sales$first_name <- str_split_fixed(string=sales$customer_name,pattern=' ', n=2)
sales$first_name <- str_split_fixed(string=sales$customer_name,pattern=' ', n=1
sales$first_name <- str_split_fixed(string=sales$customer_name,pattern=' ', n=1)
sales$first_name <- str_split_fixed(string=sales$customer_name,pattern=' ', n=1)
View(sales.)
View(sales)
sales$first_name <- str_split(sales$customer_name," ", n=2)
sales$first_name <- str_split(sales$customer_name," ", n=2)
sales$first_name <- sales$first_name[1]
sales$first_name <- str_split_fixed(sales$customer_name," ", n=2)
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales = sales[,1:23,26]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales = sales[,1:23,26]
View(sales)
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales = sales[,1:23,25:26]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales = sales[,1:23,25]
View(sales)
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales = sales[,1:23,26]
View(sales)
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales = sales[,1:23,27]
View(sales)
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
View(sales)
sales = sales[,1:23,27]
View(sales)
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
View(sales)
#sales = sales[,1:23,27]
View(sales)
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
View(sales)
sales = sales[,-24:25]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
View(sales)
sales = sales[,-24:25]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
View(sales)
sales = sales[,1:23,26]
View(sales)
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
View(sales)
sales = sales[,c(1:23,26)]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
View(sales)
sales = sales[,c(1:23,26)]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales = sales[ ,c(1:23,26)]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales = sales[,c(1:23,26)]
ncol(sales)
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales = sales[ ,c(1:23,25)]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales = sales[ ,c(1:23,25)]
View(sales)
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales = sales[ ,-23:24]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales = sales[ ,-23:24]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales = sales[ ,c(1:13,26)]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales = sales[ ,c(1:13,26)]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name <- sales$name[,2]
?rename
?colnames
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
colnames(sales$first_name) <- sales$name[,1]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
colnames(sales$first_name) <- sales$name[,1]
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
sales$name -< NULL
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
sales$name <- NULL
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
sales$name <- NULL
View(sales)
#Split names and create new columns with first and last name
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
#Kill placeholder names column
sales$name <- NULL
#
length(sales$first_name == "Bill")
#Split names and create new columns with first and last name
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
#Kill placeholder names column
sales$name <- NULL
#
length(sales$first_name == "Bill")
?str_subset
#Split names and create new columns with first and last name
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
#Kill placeholder names column
sales$name <- NULL
#
str_subset(sales$first_name, "Bill")
#Split names and create new columns with first and last name
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
#Kill placeholder names column
sales$name <- NULL
#
length(str_subset(sales$first_name, "Bill"))
length(str_match(sales$product_name,"table"))
length(str_count(sales$product_name,"table"))
length(str_count(sales$product_name,"table"))
length(str_count(sales$product_name,"table"))
length(str_count(sales$product_name,"table"))
length(str_count(sales$product_name,"table"))
length(str_count(sales$product_name,"table"))
str_count(sales$product_name,"table")
sum(str_count(sales$product_name,"table"))
table(sales$state)
texas_count = str_sub(sales$state, "Texas")
barplot(sales$cate)
texas_count = str_sub(sales$state, "Texas")
texas_count = str_subset(sales$state, "Texas")
texas_count = str_subset(sales$state, "Texas")
barplot(texas_count)
texas_count = str_subset(sales$state, "Texas")
barplot(texas_count)
texas_count = str_subset(sales$state, "Texas")
barplot(sales$state == "Texas")
texas_count = str_subset(sales$state, "Texas", sales$category)
?barplot
texas_count = str_subset(sales$state, "Texas", sales$category)
texas_count = sales[state == "Texas"]
texas_count = sales[state == "Texas"]
texas_count <- sales[sales$state == "Texas",]
barplot(table(texas_count$category))
?aggregate
aggregate(sales, sales$region, FUN = "mean")
aggregate(sales, list = (Regions = sales$region, mean)
aggregate(sales, list = (Regions = sales$region,mean)
aggregate(sales, list = (Regions = sales$region, mean)
aggregate(sales, list = (Regions = sales$region, mean)
aggregate(sales, list = (Regions = sales$region, mean)
aggregate(sales, list = (Regions = sales$region, mean)
aggregate(sales, list = (Regions = sales$region, mean)
aggregate(sales, list = (Regions = sales$region, mean)
aggregate(sales, list = (Regions = sales$region, mean)
aggregate(sales, list = (Regions = sales$region), mean)
aggregate(sales, list = (Regions = sales$region),FUN =  "mean")
aggregate(sales, list = (Regions = sales$region),FUN =  "mean")
aggregate(sales, list = (Regions = sales$region),FUN =  "mean")
aggregate(sales, list = (Regions = sales$region),FUN =  "mean")
aggregate(sales, list = (Regions = sales$region),FUN =  "mean")
aggregate(sales, sales$region, "mean")
aggregate(sales, sales$region, "mean")
aggregate(sales, sales$region, "mean")
aggregate(sales, sales$region, "mean")
aggregate(sales, sales$region, "mean")
aggregate(sales, sales$region, "mean")
aggregate(sales, sales$region, "mean")
aggregate(sales, by = (sales$region), "mean")
aggregate(sales$pfot, sales$region, "mean")
aggregate(sales$pfot, sales$region, mean)
aggregate(sales$pfot, sales$region, mean)
aggregate(sales$pfot, sales$region, mean)
aggregate(sales$pfot, sales$region, mean)
aggregate(sales$pfot, sales$region, mean)
aggregate(sales$pfot, sales$region, mean)
aggregate(sales$pfot, sales$region, mean)
aggregate(sales$profit, sales$region, mean)
aggregate(sales$profit, sales$region, mean)
aggregate(sales$profit, sales$region, mean)
aggregate(sales$profit, sales$region, mean)
aggregate(sales$profit, sales$region, mean)
aggregate(sales$profit, sales$region, mean)
aggregate(sales$profit, list(sales$region), mean)
aggregate(sales$profit, list(sales$order_date), mean)
sales$order_year <- year(sales$order_date)
#aggregate(sales$profit, list(sales$order_date), mean)
#Determine which year each order was placed
sales$order_year <- year(sales$order_date)
#Determine the average profit by year
aggregate(sales$profit, list(sales$order_year), mean)
library(stringr)
library(lubridate)
library(forcats)
library(stringr)
library(lubridate)
library(forcats)
library(stringr)
library(lubridate)
library(forcats)
library(stringr)
library(lubridate)
library(forcats)
library(stringr)
library(lubridate)
library(forcats)
library(stringr)
library(lubridate)
library(forcats)
library(stringr)
library(lubridate)
library(forcats)
library(stringr)
library(lubridate)
library(forcats)
library(stringr)
library(lubridate)
library(forcats)
#Set as date
sales$ship_date <- as.Date(sales$ship_date, format = '%B %d %Y')
sales$order_date <- as.Date(sales$order_date, format = '%m/%d/%Y')
#Find max and min order dates
newest_order = max(sales$order_date) #The most recent order date is 2017-12-30
oldest_order = min(sales$order_date) #The older order was placed on 2014-01-03
#Create interval between oldest and most recent order
date_intervals = interval(newest_order, oldest_order)
time_in_seconds = int_length(date_intervals) * -1
time_in_seconds
#Convert interval from seconds to days // 1457 days occured between the oldest and most recent order
number_of_days = time_in_seconds / 60 / 60 / 24
number_of_days
# ~ 4 years
number_of_days / 365
# ~208 weeks
number_of_days / 7
#Split names and create new columns with first and last name
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
#Kill placeholder names column
sales$name <- NULL
# There are 37 people names bill
length(str_subset(sales$first_name, "Bill"))
#Split names and create new columns with first and last name
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
#Kill placeholder names column
sales$name <- NULL
# There are 37 people names bill
length(str_subset(sales$first_name, "Bill"))
#Split names and create new columns with first and last name
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
#Kill placeholder names column
sales$name <- NULL
# There are 37 people names bill
length(str_subset(sales$first_name, "Bill"))
#Split names and create new columns with first and last name
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
#Kill placeholder names column
sales$name <- NULL
# There are 37 people names bill
length(str_subset(sales$first_name, "Bill"))
#Split names and create new columns with first and last name
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
#Kill placeholder names column
sales$name <- NULL
# There are 37 people names bill
length(str_subset(sales$first_name, "Bill"))
#Split names and create new columns with first and last name
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
# There are 37 people names bill
length(str_subset(sales$first_name, "Bill"))
#Split names and create new columns with first and last name
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
# There are 37 people names bill
length(str_subset(sales$first_name, "Bill"))
#Split names and create new columns with first and last name
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
# There are 37 people names bill
length(str_subset(sales$first_name, "Bill"))
#Split names and create new columns with first and last name
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
# There are 37 people names bill
length(str_subset(sales$first_name, "Bill"))
#Split names and create new columns with first and last name
sales$name <- str_split_fixed(sales$customer_name," ", n=2)
sales$first_name <- sales$name[,1]
sales$last_name<- sales$name[,2]
# There are 37 people names bill
length(str_subset(sales$first_name, "Bill"))
#240 mentions of the word table in the product_name column
sum(str_count(sales$product_name,"table"))
table(sales$state)
texas_count <- sales[sales$state == "Texas",]
barplot(table(texas_count$category))
#The average profit by region is as follows: Central(20.5), East(29.9), South(11.3), West(32.8)
aggregate(sales$profit, list(sales$region), mean)
#Determine which year each order was placed
sales$order_year <- year(sales$order_date)
#Determine the average profit by year
aggregate(sales$profit, list(sales$order_year), mean)
#The average profit for 2014 was 32.2, 2015 was 21.6, 2016 was 30.1, 2017 was 21.3
#Determine which year each order was placed
sales$order_year <- year(sales$order_date)
#Determine the average profit by year
round(aggregate(sales$profit, list(sales$order_year), mean))
#The average profit for 2014 was 32.2, 2015 was 21.6, 2016 was 30.1, 2017 was 21.3
#Determine which year each order was placed
sales$order_year <- year(sales$order_date)
#Determine the average profit by year
round(aggregate(sales$profit, list(sales$order_year), mean),2)
#The average profit for 2014 was 32.2, 2015 was 21.6, 2016 was 30.1, 2017 was 21.3
#Determine which year each order was placed
sales$order_year <- year(sales$order_date)
#Determine the average profit by year
round(aggregate(sales$profit, list(sales$order_year), mean),1)
#The average profit for 2014 was 32.2, 2015 was 21.6, 2016 was 30.1, 2017 was 21.3
#The average profit by region is as follows: Central(20.5), East(29.9), South(11.3), West(32.8)
round(aggregate(sales$profit, list(sales$region), mean),1)
#The average profit by region is as follows: Central(20.5), East(29.9), South(11.3), West(32.8)
round(aggregate(sales$profit, list(sales$region), mean),1)
#The average profit by region is as follows: Central(20.5), East(29.9), South(11.3), West(32.8)
round(aggregate(sales$profit, list(sales$region), mean),1)
#The average profit by region is as follows: Central(20.5), East(29.9), South(11.3), West(32.8)
round(aggregate(sales$profit, list(sales$region), mean),1)
#The average profit by region is as follows: Central(20.5), East(29.9), South(11.3), West(32.8)
round(aggregate(sales$profit, list(sales$region), mean),1)
#The average profit by region is as follows: Central(20.5), East(29.9), South(11.3), West(32.8)
round(aggregate(sales$profit, list(sales$region), mean),1)
#The average profit by region is as follows: Central(20.5), East(29.9), South(11.3), West(32.8)
round(aggregate(sales$profit, list(sales$region), mean),1)
#The average profit by region is as follows: Central(20.5), East(29.9), South(11.3), West(32.8)
round(aggregate(sales$profit, list(sales$region), mean),1)
#The average profit by region is as follows: Central(20.5), East(29.9), South(11.3), West(32.8)
aggregate(sales$profit, list(sales$region), mean)
