slice_min(num_drivers)
bad_drivers |>
select(num_drivers, insurance_premiums) |>
ggplot(aes(num_drivers, insurance_premiums)) +
geom_point() +
geom_smooth()
ggplot(bad_drivers, aes(losses)) +
geom_histogram(binwidth = 10)
ggplot(bad_drivers, aes(perc_alcohol, perc_speeding)) +
geom_point() +
geom_smooth(method = 'lm')
library("palmerpenguins")
head(penguins)
penguins_long = penguins |>
select(!year) |>
mutate(
body_mass_kg = (body_mass_g / 1000)
) |>
pivot_longer(
cols = c(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_kg),
names_to = "Variable",
values_to =  "Value"
)
penguins_long
penguins_long |>
ggplot(aes(Variable, Value, colour = species)) +
geom_boxplot() +
#facet_wrap(~Variable)+
scale_y_log10()
ggplot(penguins_long, aes(x = species, y = Value)
) +
geom_violin() +
facet_wrap(~Variable) +
scale_y_log10()
library("palmerpenguins")
head(penguins)
n_distinct(penguins$species)
n_distinct(penguins$island)
## 3 of each
penguins_long |>
group_by(species, sex) |>
summarise(
avg_mass = mean(body_mass_g, na.rm = TRUE)
)
## calculate the heaviest species
penguins |>
group_by(species) |>
summarise(
heaviest = mean(body_mass_g, na.rm = TRUE)
)
## Gentoo are the heaviest
gentoo_table = penguins |>
filter(species == "Gentoo") |>
group_by(island, year) |>
summarize (
heavy_gentoo = mean(body_mass_g, na.rm = TRUE)
)
print(gentoo_table)
x=seq(0,10,0.1)
#a)
epdf = dexp(x, 0.5)
plot(x, epdf)
#b)
ecdf = pexp(x, 0.5)
plot(x, ecdf)
#c) mean is 2, sd is 2
mean_exp = (1/0.5)
mean_exp
var_exp = 1/((0.5)^2)
stdev_exp = (var_exp)^0.5
stdev_exp
var_exp
#d) 36.8%
1-pexp(2,0.5)
#e) 77.7%
pexp(3,0.5) - pexp(0,0.5)
x=seq(0,10000,10)
#a)
log_pdf = dlnorm(x, 7,1)
plot(x, log_pdf)
#b)
log_cdf = plnorm(x, 7, 1)
plot(x, log_cdf)
grid()
#c) mean = 7, sd = 1
#d) [1] 0.9864592
max(log_cdf)
#E) 21.61%
plnorm(500, 7, 1)
#F) 42.14%
plnorm(200, 7, 1) + (1 - plnorm(1500, 7,1))
steak_survey |>
group_by(female, educ, steak_prep) |>
na.omit() |>
summarise(
response_count = n()) |>
ggplot(aes(fill = steak_prep, x = female, y = response_count)) +
geom_bar(position = "dodge", stat = "identity") +
facet_wrap(~educ) +
scale_discrete_manual(labels = c("TRUE"= "Female", "FALSE" = "Male" ))
steak_survey |>
group_by(female, educ, steak_prep) |>
na.omit() |>
summarise(
response_count = n()) |>
ggplot(aes(fill = steak_prep, x = female, y = response_count)) +
geom_bar(position = "dodge", stat = "identity") +
facet_wrap(~educ) +
scale_x_discrete(labels = c("TRUE"= "Female", "FALSE" = "Male" ))
# Female = True, Male = False
# for highest
bad_drivers |>
slice_max(num_drivers)
# for lowest
bad_drivers |>
slice_min(num_drivers)
# for highest
bad_drivers |>
slice_max(num_drivers)
# for lowest, DC
bad_drivers |>
slice_min(num_drivers)
bad_drivers |>
slice_max(num_drivers)
ggplot(bad_drivers, aes(losses)) +
geom_histogram(binwidth = 10)
ggplot(bad_drivers, aes(perc_alcohol, perc_speeding)) +
geom_point() +
geom_smooth(method = 'lm')
penguins_long = penguins |>
select(!year) |>
mutate(
body_mass_kg = (body_mass_g / 1000)
) |>
pivot_longer(
cols = c(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_kg),
names_to = "Variable",
values_to =  "Value"
)
penguins_long
penguins_long |>
ggplot(aes(Variable, Value, colour = species)) +
geom_boxplot() +
#facet_wrap(~Variable)+
scale_y_log10()
penguins_long |>
ggplot(aes(Variable, Value, colour = species)) +
geom_boxplot() +
facet_wrap(~Variable)+
scale_y_log10()
penguins_long |>
ggplot(aes(Variable, Value, colour = species)) +
geom_boxplot() +
#facet_wrap(~Variable)+
scale_y_log10()
ggplot(penguins_long, aes(x = species, y = Value)
) +
geom_violin() +
facet_wrap(~Variable) +
scale_y_log10()
n_distinct(penguins$species)
n_distinct(penguins$island)
## 3 of each
penguins_long |>
group_by(species, sex) |>
summarise(
avg_mass = mean(body_mass_g, na.rm = TRUE)
)
## calculate the heaviest species
penguins |>
group_by(species) |>
summarise(
heaviest = mean(body_mass_g, na.rm = TRUE)
)
## Gentoo are the heaviest
gentoo_table = penguins |>
filter(species == "Gentoo") |>
group_by(island, year) |>
summarize (
heavy_gentoo = mean(body_mass_g, na.rm = TRUE)
)
print(gentoo_table)
x=seq(0,10000,10)
#a)
log_pdf = dlnorm(x, 7,1)
plot(x, log_pdf)
#b)
log_cdf = plnorm(x, 7, 1)
plot(x, log_cdf)
grid()
#c) mean = 7, sd = 1
#d) [1] 0.9864592
max(log_cdf)
#E) 21.61%
plnorm(500, 7, 1)
#F) 42.14%
plnorm(200, 7, 1) + (1 - plnorm(1500, 7,1))
gc()
gc()
knitr::opts_chunk$set(echo = TRUE)
chisq.test(male_HEC)
data("HairEyeColor")
male_HEC=HairEyeColor[,,1]
female_HEC=HairEyeColor[,,1]
print(male_HEC)
print(female_HEC)
chisq.test(male_HEC)
chisq.test(female_HEC)
fisher.test(male_HEC, workspace = 2e+07)
chisq.test(male_HEC)
chisq.test(female_HEC)
fisher.test(male_HEC, workspace = 2e+07, simulate.p.value=TRUE)
chisq.test(male_HEC)
chisq.test(female_HEC)
fisher.test(male_HEC, simulate.p.value=TRUE)
fisher.test(female_HEC, simulate.p.value=TRUE)
chisq.test(male_HEC)
chisq.test(female_HEC)
fisher.test(male_HEC, simulate.p.value=TRUE)
fisher.test(female_HEC, simulate.p.value=TRUE)
male_HEC
plot(male_HEC)
plot(male_HEC$Hair, male_HEC$Eye)
x = 10
y = 5
z = 20
z
z > x > y
z > x > y
x = 10
y = 5
z = 20
x
z > x & x > y
z > x & x > y
z > x & x > y
z > x & x > y
z > x & x > y
x & y != z
x & y != z
x & y != z
x & y != z
x & y != z
x & y != z
(x & y) != z
(x & y) != z
(x & y) != z
(x & y) != z
(x & y) != z
x + 2 * y = z
x + (2 * y) = z
z > x & x > y
z > x & x > y
z > x & x > y
sum(x, + (2 * y) == z
(x + (2 * y)) == z
(x + (2 * y)) == z
(x + (2 * y)) == z
(x + (2 * y)) == z
(x + (2 * y)) == z
test_vector
test_vector
print(test_vector)
test_vector <- c(2,5,6)
test_vector <- c(2,5,6)
test_vector
(x & y) != z
test_vector <- c(1,5,11:22)
locate_test <- function (n) {
n %in% test_vector
}
test_vector <- c(1,5,11:22)
locate_test <- function (n) {
n %in% test_vector
}
test_vector <- c(1,5,11:22)
sample_vector <-c(x, y,z)
sample_vector
locate_test <- function (n) {
n %in% test_vector
}
test_vector <- c(1,5,11:22)
sample_vector <-c(x, y,z)
locate_test <- function (sample_vector) {
n %in% test_vector
}
test_vector <- c(1,5,11:22)
sample_vector <-c(x, y,z)
locate_test <- function (sample_vector) {
n %in% test_vector
}
test_vector <- c(1,5,11:22)
sample_vector <-c(x, y,z)
locate_test <- function (sample_vector) {
n %in% test_vector
}
test_vector <- c(1,5,11:22)
sample_vector <-c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
test_vector <- c(1,5,11:22)
sample_vector <-c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
locate_test(sample_vector)
test_vector <- c(1,5,11:22)
sample_vector <- c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
locate_test(sample_vector)
x %in% test_vector | y %in% test_vector | z %in% test_vector
test_vector <- c(1,5,11:22)
sample_vector <- c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
locate_test(sample_vector)
x %in% test_vector & y %in% test_vector & z %in% test_vector
test_vector <- c(1,5,11:22)
sample_vector <- c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
locate_test(sample_vector)
x %in% test_vector & y %in% test_vector & z %in% test_vector
test_vector <- c(1,5,11:22)
sample_vector <- c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
locate_test(sample_vector)
x %in% test_vector & y %in% test_vector & z %in% test_vector
test_vector <- c(1,5,11:22)
sample_vector <- c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
locate_test(sample_vector)
x %in% test_vector & y %in% test_vector & z %in% test_vector
test_vector <- c(1,5,11:22)
sample_vector <- c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
locate_test(sample_vector)
x %in% test_vector & y %in% test_vector & z %in% test_vector
test_vector <- c(1,5,11:22)
sample_vector <- c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
locate_test(sample_vector)
x %in% test_vector | y %in% test_vector | z %in% test_vector
test_vector <- c(1,5,11:22)
sample_vector <- c(x, y,z)
locate_test <- function (n) {
for n %in% test_vector
test_vector <- c(1,5,11:22)
sample_vector <- c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
locate_test(sample_vector)
x %in% test_vector | y %in% test_vector | z %in% test_vector
test_vector <- c(1,5,11:22)
sample_vector <- c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
locate_test(sample_vector)
x %in% test_vector | y %in% test_vector | z %in% test_vector
test_vector <- c(1,5,11:22)
(x %in% test_vector | y %in% test_vector | z %in% test_vector)
sample_vector <- c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
locate_test(sample_vector)
#To check which of x, y, or z is in the test vector
sample_vector <- c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
locate_test(sample_vector)
#One way to check which of x, y, or z is in the test vector
sample_vector <- c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
locate_test(sample_vector)
#With slicing
test_vector[x==test_vector | y == test_vector | z == test_vector]
test_vector <- c(1,5,11:22)
(x %in% test_vector | y %in% test_vector | z %in% test_vector)
tinytex::install_tinytex()
myf <- function(x) {
innerf <- function(x) assign("Global.res", x^2, envir = .GlobalEnv)
innerf(x+1)
}
myf <- function(x) {
innerf <- function(x) assign("Global.res", x^2, envir = .GlobalEnv)
innerf(x+1)
}
myf(2)
myf <- function(x) {
innerf <- function(x) assign("Global.res", x^2, envir = .GlobalEnv)
innerf(x+1)
}
myf(2)
View(myf)
View(myf)
View(myf)
View(myf)
View(myf)
View(myf)
View(myf)
View(myf)
Global.res
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
f(2)
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
f(2)
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
f(2)
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x * y
}
g(10)
setwd("~/MM/DSE5002")
y <- 1
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x * y
}
g(10)
y <- 1
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x * y
}
g(10)
y <- 1
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x * y
}
g(10)
y <- 1
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x * y
}
f(10)
y <- 1
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x * y
}
f(10)
#One way to check which of x, y, or z is in the test vector with a boolean
sample_vector <- c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
locate_test(sample_vector)
#With slicing
test_vector[x == test_vector | y == test_vector | z == test_vector]
test_vector[1]
#One way to check which of x, y, or z is in the test vector with a boolean
sample_vector <- c(x, y,z)
locate_test <- function (n) {
n %in% test_vector
}
locate_test(sample_vector)
#With slicing
test_vector[x == test_vector | y == test_vector | z == test_vector]
test_vector[-1]
